{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.34.60546",
      "templateHash": "simplified-template"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "swedencentral",
      "allowedValues": [
        "swedencentral"
      ],
      "metadata": {
        "description": "Azure location where resources should be deployed (e.g., swedencentral)"
      }
    }
  },
  "variables": {
    "prefix": "azureaiagenthack",
    "suffix": "[uniqueString(resourceGroup().id)]",
    "storageAccountName": "[replace(format('{0}-sa-{1}', variables('prefix'), variables('suffix')), '-', '')]",
    "logAnalyticsWorkspaceName": "[format('{0}-loganalytics-{1}', variables('prefix'), variables('suffix'))]",
    "searchServiceName": "[format('{0}-search-{1}', variables('prefix'), variables('suffix'))]",
    "apimServiceName": "[format('{0}-apim-{1}', variables('prefix'), variables('suffix'))]",
    "openAIServiceName": "[format('{0}-openai-{1}', variables('prefix'), variables('suffix'))]",
    "aiFoundryHubName": "[format('{0}-aifoundry-hub-{1}', variables('prefix'), variables('suffix'))]",
    "keyVaultName": "[format('{0}-kv-{1}', variables('prefix'), variables('suffix'))]",
    "applicationInsightsName": "[format('{0}-appinsights-{1}', variables('prefix'), variables('suffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1
        },
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "basic"
      },
      "properties": {
        "hostingMode": "default"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2023-05-01-preview",
      "name": "[variables('apimServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Developer",
        "capacity": 1
      },
      "properties": {
        "publisherEmail": "admin@contoso.com",
        "publisherName": "Contoso",
        "customProperties": {
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('openAIServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "apiProperties": {
          "statisticsEnabled": false
        },
        "customSubDomainName": "[variables('openAIServiceName')]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('openAIServiceName'), 'gpt-4o-mini')]",
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-4o-mini",
          "version": "2024-07-18"
        }
      },
      "sku": {
        "name": "GlobalStandard",
        "capacity": 50
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2024-04-01",
      "name": "[variables('aiFoundryHubName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "Hub",
      "properties": {
        "friendlyName": "[variables('aiFoundryHubName')]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "hbiWorkspace": false,
        "managedNetwork": {
          "isolationMode": "Disabled"
        },
        "v1LegacyMode": false,
        "publicNetworkAccess": "Enabled",
        "discoveryUrl": "[format('https://{0}.api.azureml.ms/discovery', parameters('location'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[variables('logAnalyticsWorkspaceName')]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[variables('searchServiceName')]"
    },
    "apiManagementName": {
      "type": "string",
      "value": "[variables('apimServiceName')]"
    },
    "openAIServiceName": {
      "type": "string",
      "value": "[variables('openAIServiceName')]"
    },
    "aiFoundryHubName": {
      "type": "string",
      "value": "[variables('aiFoundryHubName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    }
  }
}